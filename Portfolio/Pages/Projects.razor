@page "/projects"
@using Octokit

@inject GitHubClient Client
@inject ILogger<Projects> Logger

<PageTitle>Projects</PageTitle>

<h1>Projects</h1>

@if (!_repos.Any())
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <div class="row gy-3">
        @foreach (var repo in _repos)
        {
            <div class="col">
                <RepositoryCard Data=@repo/>
            </div>
        }
    </div>
    <div class="d-flex justify-content-center mt-5 mb-5">
        @if (Loading)
        {
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        }
        else
        {
            <button class="btn btn-primary ps-4 pe-4" @onclick="LoadRepos">Load More</button>
        }
    </div>
}

@code {

    private readonly List<RepositoryData> _repos = [];
    private bool _loading = true;
    private int _page = 1;

    private bool Loading => !_repos.Any() || _loading;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await LoadRepos();
    }

    private async Task LoadRepos()
    {
        _loading = true;
        var apiOptions = new ApiOptions { StartPage = _page++, };
        var repositories = await Client.Repository.GetAllForUser("AndresH18", apiOptions);
        foreach (var repo in repositories)
        {
            var languages = await Client.Repository.GetAllLanguages(repo.Id);
            foreach (var language in languages)
            {
                Logger.LogTrace("""Repository "{repository}", language "{language}" """, repo.Name, language.Name);
            }

            var l = languages.OrderByDescending(language => language.NumberOfBytes).ToList();
            _repos.Add(new RepositoryData(repo.Name, repo.Description, repo.HtmlUrl, l.Select(language => language.Name).ToList()));
        }

        _loading = false;
    }

}