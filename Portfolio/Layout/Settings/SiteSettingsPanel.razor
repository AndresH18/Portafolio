@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@implements IDialogContentComponent
@* @rendermode InteractiveServer *@

<div>
    <FluentDesignTheme @bind-Mode="@Mode"
                       @bind-OfficeColor="@OfficeColor"
                       StorageName="theme"/>

    <FluentStack Orientation="Orientation.Vertical" VerticalGap="0">
        <FluentSelect Label="Theme"
                      Width="100%"
                      Items="@AllModes"
                      @bind-SelectedOption="@Mode"
                      Style="margin-bottom: 30px;"/>

        <FluentSelect Label="Color"
                      Width="100%"
                      Height="200px"
                      Items="@(OfficeColorUtilities.AllColors.Cast<OfficeColor?>())"
                      @bind-SelectedOption="@OfficeColor"
                      Style="margin-bottom: 30px;">
            <OptionTemplate>
                <FluentStack >
                    <FluentIcon Value="@(new Icons.Filled.Size20.RectangleLandscape())"
                                Color="Color.Custom"
                                CustomColor="@(GetCustomColor(context))"/>
                    <FluentLabel>@context</FluentLabel>
                </FluentStack>
            </OptionTemplate>
        </FluentSelect>
    </FluentStack>
</div>

@code {
    // private bool _popVisible;

    private static IEnumerable<DesignThemeModes> AllModes => Enum.GetValues<DesignThemeModes>();

    private DesignThemeModes Mode { get; set; }

    private OfficeColor? OfficeColor { get; set; }
    private static string? GetCustomColor(OfficeColor? color)
    {
        return color switch
        {
            null => OfficeColorUtilities.GetRandom().ToAttributeValue(),
            Microsoft.FluentUI.AspNetCore.Components.OfficeColor.Default => "#036ac4",
            _ => color.ToAttributeValue()
        };
    }

}